package net.minecraft.src;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import org.lwjgl.input.Keyboard;

import net.minecraft.client.Minecraft;

public class GuiReplays extends GuiScreen {

	private final GuiScreen parentScreen;
	public List<GuiReplayElement> replaysList = new ArrayList<GuiReplayElement>();
	public int selectedReplay = -1;
	private GuiSlotReplay guislotreplay;
	public GuiButton buttonSelect;
	
	public GuiReplays(GuiScreen parent) {
		parentScreen = parent;
	}
	
	@Override
	public void initGui() {
		replaysList.clear();
		File replaysDir = new File(Minecraft.getMinecraftDir(), "replay");
		if(!replaysDir.exists())
			replaysDir.mkdirs();
		File[] files = replaysDir.listFiles();
		for(int i = 0; i < files.length; ++i) {
			File f = files[i];
			if(f.isDirectory()) {
				try {
					GuiReplayElement replay = new GuiReplayElement(f);
					replaysList.add(replay);
				} catch (FileNotFoundException e) {
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}
		Keyboard.enableRepeatEvents(true);
		controlList.clear();
		guislotreplay = new GuiSlotReplay(this);
		initGuiControls();
	}
	
	private void initGuiControls() {
		StringTranslate stringtranslate = StringTranslate.getInstance();
		controlList.add(buttonSelect = new GuiButton(1, width / 2 - 154, height - 52, 100, 20, stringtranslate.translateKey("replays.play")));
		controlList.add(new GuiButton(0, width / 2 + 4 + 76, height - 28, 75, 20, stringtranslate.translateKey("gui.cancel")));
		buttonSelect.enabled = selectedReplay >= 0 && selectedReplay < replaysList.size();
	}
	
	@Override
	protected void actionPerformed(GuiButton guibutton) {
		if(!guibutton.enabled) {
			return;
		}
		if(guibutton.id == 0) {
			mc.displayGuiScreen(parentScreen);
		} if(guibutton.id == 1) {
			playSelectedReplay();
		} else {
			guislotreplay.actionPerformed(guibutton);
		}
	}
	
	@Override
	public void drawScreen(int i, int j, float f) {
		StringTranslate stringtranslate = StringTranslate.getInstance();
		drawDefaultBackground();
		guislotreplay.drawScreen(i, j, f);
		drawCenteredString(fontRenderer, stringtranslate.translateKey("replays.title"), width / 2, 20, 0xffffff);
		super.drawScreen(i, j, f);
	}
	
	public void playSelectedReplay() {
		try {
			new NetClientHandlerReplay(mc, replaysList.get(selectedReplay).replayFolder);
		} catch (Exception e) {
			mc.displayGuiScreen(new GuiDisconnected("connect.failed", "disconnect.genericReason", new Object[]{e.getMessage()}));
		}
	}
}
