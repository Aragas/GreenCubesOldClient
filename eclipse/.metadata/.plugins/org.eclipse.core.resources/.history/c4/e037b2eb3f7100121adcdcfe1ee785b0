import com.sk89q.worldedit.LocalPlayer;
import com.sk89q.worldedit.LocalWorld;
import com.sk89q.worldedit.ServerInterface;
import com.sk89q.worldedit.Vector;
import com.sk89q.worldedit.WorldVector;
import com.sk89q.worldedit.bags.BlockBag;
import com.sk89q.worldedit.blocks.BaseItemStack;
import com.sk89q.worldedit.cui.CUIEvent;

public class SPCLocalPlayer extends LocalPlayer {
	public EntityPlayerSP player;

	public SPCLocalPlayer(ServerInterface server, EntityPlayerSP player) {
		super(server);
		this.player = player;
	}

	public String[] getGroups() {
		return new String[0];
	}

	public BlockBag getInventoryBlockBag() {
		return null;
	}

	public int getItemInHand() {
		ItemStack itemstack = this.player.getCurrentEquippedItem();
		return itemstack == null ? 0 : itemstack.itemID;
	}

	public String getName() {
		return this.player.username;
	}

	public double getPitch() {
		return this.player.rotationPitch;
	}

	public WorldVector getPosition() {
		return new WorldVector(getWorld(), this.player.posX, this.player.posY - 1.0D, this.player.posZ);
	}

	public LocalWorld getWorld() {
		return new SPCLocalWorld(this.player.worldObj);
	}

	public double getYaw() {
		return this.player.rotationYaw;
	}

	public void giveItem(int type, int qty) {
		BaseItemStack item = new BaseItemStack(type, qty);
		getWorld().dropItem(getPosition(), item);
	}

	public boolean hasPermission(String perm) {
		return true;
	}

	public void print(String arg0) {
		this.player.ph.sendMessage(arg0);
	}

	public void printError(String arg0) {
		this.player.ph.sendError(arg0);
	}

	public void printRaw(String arg0) {
		print(arg0);
	}

	public void printDebug(String text) {
		this.player.ph.sendDebug(text);
	}

	public void setPosition(Vector pos, float pitch, float yaw) {
		this.player.setPositionAndRotation(pos.getX(), pos.getY() + 2.0D, pos.getZ(), yaw, pitch);
	}

	public WorldVector getBlockTrace(int range) {
		gv m = this.player.a(range, 1.0F);
		return new WorldVector(getWorld(), m.b, m.c, m.d);
	}

	public WorldVector getSolidBlockTrace(int range) {
		return getBlockTrace(range);
	}

	public void dispatchCUIEvent(CUIEvent event) {
		try {
			SPCPluginManager.getPluginManager().callPluginMethods(PlayerHelper.PLUGIN_HANDLECUIEVENT, new Object[]{event.getTypeId(), event.getParameters()});
		} catch (Exception e) {
		}
	}
}