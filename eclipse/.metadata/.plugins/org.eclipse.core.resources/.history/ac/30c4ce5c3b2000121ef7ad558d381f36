package net.minecraft.src;

import java.io.BufferedInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.util.zip.DeflaterInputStream;
import java.util.zip.GZIPInputStream;

public class NetworkManagerReplay implements INetworkManager{

	private static final int NO_COPMRESSION = 0;
	private static final int GZIP_COMPRESSION = 1;
	private static final int DEFLATER_COMPRESSION = 2;
	
	private DataInputStream input;
	
	public NetworkManagerReplay(File rawFile, NetHandler handler, int compressionType) throws IOException {
		InputStream in;
		if(compressionType == NO_COPMRESSION)
			in = new FileInputStream(rawFile);
		else if(compressionType == GZIP_COMPRESSION)
			in = new GZIPInputStream(new FileInputStream(rawFile));
		else if(compressionType == DEFLATER_COMPRESSION)
			in = new DeflaterInputStream(new FileInputStream(rawFile));
		else
			throw new IllegalArgumentException("Unrecognized compression type: " + compressionType);
		input = new DataInputStream(new BufferedInputStream(in));
	}
	
	@Override
	public void processReadPackets() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void wakeThreads() {
		
	}

	@Override
	public void addToSendQueue(Packet packet) {
		
	}

	@Override
	public void networkShutdown(String string, Object[] objects) {
		shutdown();
	}

	@Override
	public void shutdown() {
		try {
			input.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

}
