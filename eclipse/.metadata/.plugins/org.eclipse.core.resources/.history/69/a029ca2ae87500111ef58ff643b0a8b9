package net.minecraft.src;

public class BlockHalfBlock extends Block {

    private String blockName;
    private String blockNameOrig;
    
	public BlockHalfBlock(int i, Block original) {
		super(i, original.blockIndexInTexture, original.blockMaterial);
		setBlockBounds(0.5F, 0.0F, 0.0F, 1.0F, 1.0F, 1.0F);
		opaqueCubeLookup[i] = true;
		setLightOpacity(0);
		setHardness(original.blockHardness);
		setResistance(original.blockResistance);
		setStepSound(original.stepSound);
	}
	
	public void setBlockBoundsForItemRender()
    {
		setBlockBounds(0.5F, 0.0F, 0.0F, 1.0F, 1.0F, 1.0F);
    }

	public AxisAlignedBB getSelectedBoundingBoxFromPool(World world, int i,
			int j, int k) {
		switch (world.getBlockMetadata(i, j, k)) {
		case 0:
			return AxisAlignedBB.getBoundingBoxFromPool((double)i + 0.5, (double)j, (double)k, (double)i + 1.0, (double)j + 1.0, (double)k + 1.0);
		case 2:
			return AxisAlignedBB.getBoundingBoxFromPool((double)i, (double)j, (double)k + 0.5, (double)i + 1.0, (double)j + 1.0, (double)k + 1.0);
		case 1:
			return AxisAlignedBB.getBoundingBoxFromPool((double)i, (double)j, (double)k, (double)i + 0.5, (double)j + 1.0, (double)k + 1.0);
		case 3:
			return AxisAlignedBB.getBoundingBoxFromPool((double)i, (double)j, (double)k, (double)i + 1.0, (double)j + 1.0, (double)k + 0.5);
		}
		return super.getSelectedBoundingBoxFromPool(world, i, j, k);
	}

	public AxisAlignedBB getCollisionBoundingBoxFromPool(World world, int i,
			int j, int k) {
		switch (world.getBlockMetadata(i, j, k)) {
		case 0:
			return AxisAlignedBB.getBoundingBoxFromPool((double)i + 0.5, (double)j, (double)k, (double)i + 1.0, (double)j + 1.0, (double)k + 1.0);
		case 2:
			return AxisAlignedBB.getBoundingBoxFromPool((double)i, (double)j, (double)k + 0.5, (double)i + 1.0, (double)j + 1.0, (double)k + 1.0);
		case 1:
			return AxisAlignedBB.getBoundingBoxFromPool((double)i, (double)j, (double)k, (double)i + 0.5, (double)j + 1.0, (double)k + 1.0);
		case 3:
			return AxisAlignedBB.getBoundingBoxFromPool((double)i, (double)j, (double)k, (double)i + 1.0, (double)j + 1.0, (double)k + 0.5);
		}
		return super.getCollisionBoundingBoxFromPool(world, i, j, k);
	}

	public void onBlockPlacedBy(World world, int i, int j, int k,
			EntityLiving entityliving) {
		int l = MathHelper.floor_double((double) ((entityliving.rotationYaw * 4F) / 360F) + 0.5D) & 3;
			if (l == 0) {
				world.setBlockMetadataWithNotify(i, j, k, 2);
			}
			if (l == 1) {
				world.setBlockMetadataWithNotify(i, j, k, 1);
			}
			if (l == 2) {
				world.setBlockMetadataWithNotify(i, j, k, 3);
			}
			if (l == 3) {
				world.setBlockMetadataWithNotify(i, j, k, 0);
			}
	}
	
	public void setBlockBoundsBasedOnState(IBlockAccess blockAccess, int i, int j, int k) {
		switch (blockAccess.getBlockMetadata(i, j, k)) {
		case 0:
			setBlockBounds(0.5F, 0.0F, 0.0F, 1.0F, 1.0F, 1.0F);
			break;
		case 2:
			setBlockBounds(0.0F, 0.0F, 0.5F, 1.0F, 1.0F, 1.0F);
			break;
		case 1:
			setBlockBounds(0.0F, 0.0F, 0.0F, 0.5F, 1.0F, 1.0F);
			break;
		case 3:
			setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 1.0F, 0.5F);
			break;
		}
	}
	
	public boolean blockActivated(World world, int i, int j, int k, EntityPlayer entityplayer)
    {
		ItemStack item = entityplayer.getCurrentEquippedItem();
		if(item != null && item.itemID == blockID)
			return true;
        return false;
    }

	public boolean renderAsNormalBlock() {
		return false;
	}

	public boolean isOpaqueCube() {
		return false;
	}
}
